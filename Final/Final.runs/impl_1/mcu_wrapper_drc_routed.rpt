Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2017.4 (win64) Build 2086221 Fri Dec 15 20:55:39 MST 2017
| Date         : Wed Jun 17 13:08:22 2020
| Host         : DESKTOP-263ISBT running 64-bit major release  (build 9200)
| Command      : report_drc -file mcu_wrapper_drc_routed.rpt -pb mcu_wrapper_drc_routed.pb -rpx mcu_wrapper_drc_routed.rpx
| Design       : mcu_wrapper
| Device       : xc7z020clg484-1
| Speed File   : -1
| Design State : Routed
---------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 67
+----------+----------+------------------------+------------+
| Rule     | Severity | Description            | Violations |
+----------+----------+------------------------+------------+
| DPIP-1   | Warning  | Input pipelining       | 11         |
| DPOP-1   | Warning  | PREG Output pipelining | 12         |
| DPOP-2   | Warning  | MREG Output pipelining | 12         |
| PDRC-153 | Warning  | Gated clock check      | 32         |
+----------+----------+------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return0 input mcu_i/hash_0/inst/murmur_return0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return0__0 input mcu_i/hash_0/inst/murmur_return0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return0__1 input mcu_i/hash_0/inst/murmur_return0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return3 input mcu_i/hash_0/inst/murmur_return3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__0 input mcu_i/hash_0/inst/murmur_return3__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__2 input mcu_i/hash_0/inst/murmur_return3__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__3 input mcu_i/hash_0/inst/murmur_return3__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__4 input mcu_i/hash_0/inst/murmur_return3__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return5 input mcu_i/hash_0/inst/murmur_return5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return5__0 input mcu_i/hash_0/inst/murmur_return5__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP mcu_i/hash_0/inst/murmur_return5__1 input mcu_i/hash_0/inst/murmur_return5__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return0 output mcu_i/hash_0/inst/murmur_return0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return0__0 output mcu_i/hash_0/inst/murmur_return0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return0__1 output mcu_i/hash_0/inst/murmur_return0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3 output mcu_i/hash_0/inst/murmur_return3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__0 output mcu_i/hash_0/inst/murmur_return3__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__1 output mcu_i/hash_0/inst/murmur_return3__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__2 output mcu_i/hash_0/inst/murmur_return3__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__3 output mcu_i/hash_0/inst/murmur_return3__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__4 output mcu_i/hash_0/inst/murmur_return3__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return5 output mcu_i/hash_0/inst/murmur_return5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return5__0 output mcu_i/hash_0/inst/murmur_return5__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return5__1 output mcu_i/hash_0/inst/murmur_return5__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return0 multiplier stage mcu_i/hash_0/inst/murmur_return0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return0__0 multiplier stage mcu_i/hash_0/inst/murmur_return0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return0__1 multiplier stage mcu_i/hash_0/inst/murmur_return0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3 multiplier stage mcu_i/hash_0/inst/murmur_return3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__0 multiplier stage mcu_i/hash_0/inst/murmur_return3__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__1 multiplier stage mcu_i/hash_0/inst/murmur_return3__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__2 multiplier stage mcu_i/hash_0/inst/murmur_return3__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__3 multiplier stage mcu_i/hash_0/inst/murmur_return3__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return3__4 multiplier stage mcu_i/hash_0/inst/murmur_return3__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return5 multiplier stage mcu_i/hash_0/inst/murmur_return5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return5__0 multiplier stage mcu_i/hash_0/inst/murmur_return5__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP mcu_i/hash_0/inst/murmur_return5__1 multiplier stage mcu_i/hash_0/inst/murmur_return5__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

PDRC-153#1 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[0]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[0]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[0]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#2 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[10]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[10]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[10]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#3 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[11]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[11]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[11]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#4 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[12]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[12]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[12]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#5 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[13]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[13]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[13]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#6 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[14]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[14]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[14]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#7 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[15]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[15]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[15]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#8 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[16]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[16]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[16]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#9 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[17]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[17]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[17]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#10 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[18]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[18]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[18]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#11 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[19]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[19]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[19]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#12 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[1]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[1]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[1]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#13 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[20]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[20]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[20]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#14 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[21]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[21]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[21]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#15 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[22]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[22]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[22]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#16 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[23]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[23]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[23]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#17 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[24]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[24]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[24]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#18 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[25]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[25]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[25]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#19 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[26]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[26]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[26]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#20 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[27]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[27]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[27]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#21 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[28]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[28]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[28]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#22 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[29]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[29]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[29]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#23 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[2]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[2]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[2]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#24 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[30]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[30]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[30]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#25 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[31]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[31]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[31]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#26 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[3]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[3]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[3]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#27 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[4]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[4]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[4]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#28 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[5]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[5]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[5]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#29 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[6]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[6]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[6]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#30 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[7]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[7]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[7]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#31 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[8]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[8]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[8]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>

PDRC-153#32 Warning
Gated clock check  
Net mcu_i/hash_0/inst/h_reg[9]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin mcu_i/hash_0/inst/h_reg[9]_LDC_i_1/O, cell mcu_i/hash_0/inst/h_reg[9]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
Related violations: <none>


